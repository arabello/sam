apply plugin: 'application'

dependencies{
    implementation project(':core')
    implementation project(':domain')
    implementation project(':presenters')
    implementation project(':view')
    implementation project(':controllers')

    implementation 'com.github.scopt:scopt_2.12:3.7.1'
}

task updateDevProperties(dependsOn: processResources) {
    doLast {
        def props = new Properties()
        def propsFile = file("${project(':main').projectDir}/dev.properties")

        props.load(propsFile.newDataInputStream())
        props.setProperty("version", project.version)
        props.store(propsFile.newWriter(), null)
    }
}

task createDistProperties {
    doLast {
        def props = new Properties()
        def devProps = file("${project(':main').projectDir}/dev.properties")
        def distProps = file("${project(':main').projectDir}/dist.properties")

        props.load(devProps.newDataInputStream())
        props.setProperty("airelationTemplateFile", "resources/airelation/web/index.html.txt")
        props.setProperty("version", project.version)
        props.store(distProps.newWriter(), null)
    }
}

distZip.dependsOn createDistProperties
installDist.dependsOn createDistProperties

application{
    applicationName = "sam"
    mainClassName = 'io.sam.main.cli.MainCLI'

    applicationDistribution.from("."){
            include "dist.properties"
        }

    applicationDistribution.from("${project(':view').projectDir}/src/main/resources"){
        into "resources"
    }
}